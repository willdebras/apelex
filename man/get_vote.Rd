% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_vote.R
\name{get_vote}
\alias{get_vote}
\title{get_vote}
\usage{
get_vote(
  key = Sys.getenv("apelex_api_key"),
  date = NULL,
  state = NULL,
  level = NULL,
  office_id = NULL,
  winner = NULL,
  race_type = NULL,
  party = NULL,
  test = FALSE,
  national = TRUE,
  uncontested = FALSE
)
}
\arguments{
\item{key}{Supplied API key}

\item{date}{Election date supplied in the format of Y-M-D}

\item{state}{Optional parameter for state supplied as postal code, e.g. "IA"}

\item{level}{Level of reporting units. Can take arguments for state, district, fipscode, or reporting unit}

\item{office_id}{AP ID code for the office position. Optionally can be a list or vector of IDs}

\item{winner}{If a winners has been declared. Can supply "X" if a races has a declared winer, R if there is a run-off, U if there is no declared winner, or A for all. Defaults to all.}

\item{race_type}{Type of election. Optionally can be list or vector of types}

\item{uncontested}{}
}
\value{
Returns a tidy dataframe of election results
}
\description{
Function to get vote count data for a given date from the AP API's elections endpoint
}
\examples{
test_ia <- get_vote(key = Sys.getenv("apelex_api_key"), level = "fipscode", state = "IA", date = "2020-02-03")
}
